pycharm edu? https://www.jetbrains.com/pycharm-edu/

general:

   python: all a scientist needs
   http://arxiv.org/abs/0803.1838

http://python4astronomers.github.io/

use IPython notebooks


-- introduction to python (2 lectures)

     -- data structures and control statements
     -- functions, classes, popular modules
     -- decorators http://simeonfranklin.com/blog/2012/jul/1/python-decorators-in-12-steps/


-- introduction to the numpy array library (1 lecture)

   o show the radial average code in pyro


-- IPython notebooks (1 lecture)


-- basic numerical methods (1 lecture)


-- introduction to scipy: a library of numerical tools for scientific
   programming (2 lectures)

   o reading in different data:

     - CSV
     - loadfile from NumPy
     - HDF5?


-- introduction to matplotlib: a scientific visualization package (2 lectures)


-- MayaVi for 3-d visualization (1 lecture)

   o download Hipparcos data from: 
     http://www.rssd.esa.int/index.php?project=HIPPARCOS&page=multisearch2

     (select search by parallax and limit between 20 and 100)

     fields are described here: http://www.rssd.esa.int/SA/HIPPARCOS/docs/vol1_all.pdf

     make a plot in 3-d with the stars close to the Sun and show how you
     can rotate around it.

-- VPython for simple 3-d figures

-- introduction to sympy: symbolic mathematics in python (1 lecture)


-- building applications (1 lecture)

    o show pyro

    o commandline switches

    o inputs file


-- f2py and C extensions (1 lecture)

   use ctypes:
   http://stackoverflow.com/questions/145270/calling-c-c-from-python

   Cython: get performance from your python code:
   http://en.wikipedia.org/wiki/Cython

   weave

   f2py

-- filesystem operations (0.5 lecture)

   o backup script example

   o test suite example
 
   o regular expressions (show the Fortran dependency code)


-- nose for unit testing (0.5 lecture)


-- GUIs?

   o need to install Tkinter and python-matplotlib-qt4

   o the "Programming Python" book by Lutz has a lot about tkinter
     links:

http://www.scientificpython.net/



other courses:

 -- Washington: http://www.astro.washington.edu/users/vanderplas/Astr599/

 -- Berkeley: http://www.pythonbootcamp.info/

 -- Bonn: http://www.astro.uni-bonn.de/~rschaaf/Python2008/

 -- Illinois: http://sipapu.astro.illinois.edu/~ricker/teaching/astr596pca.html


examples:

  -- Hipparcos data reading and plotting

  -- ODEs w/ SciPy: Lorenz attractor

  -- something with fitting/regression (incl. non-linear model)

  -- something biological (sequencing? -- look at that python biology paper)

  -- image processing w/ FFTs (filters, signal processing)

  -- CSV

  -- QM tunnelling program showing matplotlab

  -- animations


